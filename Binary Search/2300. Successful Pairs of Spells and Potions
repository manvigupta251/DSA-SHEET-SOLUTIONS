class Solution {
public:
    int solve(int multiplier, vector<int>& potions, long long success){
        int cnt = 0; 
        int n = potions.size();
        int low = 0, high = n-1;
        while(low <= high){
            int mid = low + (high - low)/2;
            
            if(1LL*multiplier*potions[mid] >= success){
                cnt = n-mid;
                high = mid-1;
            }

            else low = mid+1;
        }

        return cnt;
    }

    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        //lower bound of success se main ans array fill karlungi
        //main issue -> multiply
        //sort potions
        //mid se multiply 5*3 = 15 ans aara toh iske baad jo honge usse bhi aega
        //fir aur pehle jao count ke lie warna ni ara ans high jao
        vector<int> ans;
        sort(potions.begin(), potions.end());
        for(int i = 0; i<spells.size(); i++){
            int solution = solve(spells[i], potions, success);
            ans.push_back(solution);
        }
        return ans;
    }
};
