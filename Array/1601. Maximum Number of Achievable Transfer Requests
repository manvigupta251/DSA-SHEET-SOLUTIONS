class Solution {
public:
    int cnt = 0;

    void solve(int indx, vector<vector<int>>& requests, vector<int> &indegree, int service){
        if(indx == requests.size()){
            for (int i = 0; i < indegree.size(); i++) {
                if (indegree[i]) {
                    return;
                }
            }

            cnt = max(cnt, service);
            return;
        }

        //not
        solve(indx+1, requests, indegree, service);

        //pick
        indegree[requests[indx][0]]--;
        indegree[requests[indx][1]]++;
        solve(indx+1, requests, indegree, service+1);
        indegree[requests[indx][0]]++;
        indegree[requests[indx][1]]--;
    }

    int maximumRequests(int n, vector<vector<int>>& requests) {
        //here we have a choice to either accept request or deny 
        //aur usse max niklega
        vector<int> indegree(n, 0);
        solve(0, requests, indegree, 0);
        return cnt;
    }
};
